{"version":3,"sources":["components/App/App.jsx","index.js"],"names":["Loading","styled","div","ErrorMessage","Page","Title","h1","MessageForm","form","MessageTextarea","textarea","SubmitButton","button","MessageList","MessageContainer","MessageHead","MessageAuthor","MessageTime","DeleteButton","MessageBody","Message","author","time","children","App","useState","messages","setMessages","messageApiError","setMessageApiError","value","setValue","postMessageError","setPostMessageError","isLoadingPostMessage","setIsLoadingPostMessage","fetchMessages","fetch","then","response","json","data","catch","error","message","handleDeleteData","console","log","useEffect","onSubmit","e","preventDefault","method","headers","body","JSON","stringify","nickname","ok","onFocus","onChange","target","rows","toString","length","map","Date","createdAt","toLocaleString","onClick","id","ReactDOM","render","theme","colors","primary_300","primary_400","primary_500","document","getElementById"],"mappings":"8vEAIA,IAGMA,EAAUC,IAAOC,IAAV,KAcPC,EAAeF,IAAOC,IAAV,KAMZE,EAAOH,IAAOC,IAAV,KAKJG,EAAQJ,IAAOK,GAAV,KAILC,EAAcN,IAAOO,KAAV,KAIXC,EAAkBR,IAAOS,SAAV,KAMfC,EAAeV,IAAOW,OAAV,KAIZC,EAAcZ,IAAOC,IAAV,KAIXY,EAAmBb,IAAOC,IAAV,KAOhBa,EAAcd,IAAOC,IAAV,KAQXc,EAAgBf,IAAOC,IAAV,KAKbe,EAAchB,IAAOC,IAAV,KAIXgB,EAAejB,IAAOW,OAAV,KAeZO,EAAclB,IAAOC,IAAV,KAKXkB,EAAU,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAC/B,OACE,mCACE,eAACT,EAAD,WACE,eAACC,EAAD,WACE,cAACC,EAAD,UAAgBK,IAChB,cAACJ,EAAD,UAAcK,OAEhB,cAACH,EAAD,UAAcI,UA6HPC,EAjHH,WAAO,IAAD,EACgBC,mBAAS,MADzB,mBACTC,EADS,KACCC,EADD,OAE8BF,mBAAS,MAFvC,mBAETG,EAFS,KAEQC,EAFR,OAGUJ,qBAHV,mBAGTK,EAHS,KAGFC,EAHE,OAIgCN,qBAJhC,mBAITO,EAJS,KAISC,EAJT,OAKwCR,oBAAS,GALjD,mBAKTS,EALS,KAKaC,EALb,OAMIV,qBANJ,mBAQVW,GARU,UAQM,WACpB,OAAOC,MA1HT,2EA2HKC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLd,EAAYc,MAEbC,OAAM,SAACC,GACNd,EAAmBc,EAAMC,cAIzBC,EAAmB,WACvBC,QAAQC,IAAIrB,IAoDd,OAFAsB,oBAAUZ,EAAe,IAGvB,eAAChC,EAAD,WACG8B,GAAwB,cAAClC,EAAD,0BACzB,cAACK,EAAD,iCACA,eAACE,EAAD,CAAa0C,SArCQ,SAACC,GACxBA,EAAEC,iBACEjB,IACJC,GAAwB,GAExBE,MAAM,8CAA+C,CACnDe,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBC,SAAU,WACVH,KAAMxB,MAGPQ,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACLN,GAAwB,GACR,IAAZM,EAAKiB,GACPzB,EAAoBQ,EAAKG,UAEzBb,EAAS,IACTK,QAGHM,OAAM,SAACC,GACNR,GAAwB,GACxBF,EAAoBU,EAAMC,cAU5B,UACE,cAACnC,EAAD,CACEqB,MAAOA,EACP6B,QAhDoB,SAACT,GAC3BjB,EAAoB,OAgDd2B,SA7CqB,SAACV,GAC5BnB,EAASmB,EAAEW,OAAO/B,QA6CZgC,KAAM,KAER,cAACnD,EAAD,2BACCqB,GAAoB,cAAC7B,EAAD,UAAe6B,OAErCJ,GACC,eAACzB,EAAD,mCAEE,uBACCyB,EAAgBmC,cAGpBrC,GAAgC,IAApBA,EAASsC,QAAgB,6CACtC,cAACnD,EAAD,UACE,8BACGa,GACCA,EAASuC,KAAI,SAACrB,GAAD,OACX,eAAC,EAAD,CAEEvB,OAAQuB,EAAQa,SAChBnC,KAAM,IAAI4C,KAAKtB,EAAQuB,WAAWC,iBAHpC,UAKGxB,EAAQU,KACT,cAACpC,EAAD,CAAcmD,QAASxB,EAAvB,4BALKD,EAAQ0B,eC5M7BC,IAASC,OACP,cAAC,IAAD,CAAeC,MATH,CACZC,OAAQ,CACNC,YAAa,UACbC,YAAa,UACbC,YAAa,YAKf,SACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.112c88f8.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport PropTypes from 'prop-types'\n\nconst API_ENDPOINT =\n  'https://student-json-api.lidemy.me/comments?_sort=createdAt&_order=desc'\n\nconst Loading = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  color: #ddd;\n  font-size: 3rem;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`\n\nconst ErrorMessage = styled.div`\n  color: lightsalmon;\n  font-size: 2rem;\n  font-weight: bold;\n  padding: 1rem 0;\n`\nconst Page = styled.div`\n  width: 480px;\n  margin: 0 auto;\n`\n\nconst Title = styled.h1`\n  color: #333;\n`\n\nconst MessageForm = styled.form`\n  margin: 1rem 0 0 0;\n`\n\nconst MessageTextarea = styled.textarea`\n  display: block;\n  width: 100%;\n  box-sizing: border-box;\n`\n\nconst SubmitButton = styled.button`\n  margin: 0.5rem 0 0 0;\n`\n\nconst MessageList = styled.div`\n  margin: 1rem 0 0 0;\n`\n\nconst MessageContainer = styled.div`\n  background-color: rgb(32, 178, 170, 0.3);\n  padding: 1rem;\n  margin: 0 0 1rem 0;\n  border-radius: 0.5rem;\n`\n\nconst MessageHead = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0.25rem 0;\n  border-bottom: 2px solid rgba(32, 208, 170, 0.5);\n`\n\nconst MessageAuthor = styled.div`\n  color: rgba(23, 33, 44, 0.5);\n  font-size: 1rem;\n`\n\nconst MessageTime = styled.div`\n  margin: 0 0 0 0.5rem;\n`\n\nconst DeleteButton = styled.button`\n  border-radius: 0.5rem;\n  padding: 0.25rem;\n  color: #eee;\n  background-color: rgb(105, 156, 154, 0.6);\n  border: 2px solid rgb(105, 156, 154);\n  cursor: pointer;\n  &:hover {\n    background-color: rgb(105, 156, 154, 1);\n  }\n  &:focus {\n    outline: 0;\n  }\n`\n\nconst MessageBody = styled.div`\n  font-size: 1.25rem;\n  padding: 0.25rem 0;\n`\n\nconst Message = ({ author, time, children }) => {\n  return (\n    <>\n      <MessageContainer>\n        <MessageHead>\n          <MessageAuthor>{author}</MessageAuthor>\n          <MessageTime>{time}</MessageTime>\n        </MessageHead>\n        <MessageBody>{children}</MessageBody>\n      </MessageContainer>\n    </>\n  )\n}\n\nMessage.propTypes = {\n  author: PropTypes.string,\n  time: PropTypes.string,\n  children: PropTypes.node,\n}\n\nconst App = () => {\n  const [messages, setMessages] = useState(null)\n  const [messageApiError, setMessageApiError] = useState(null)\n  const [value, setValue] = useState()\n  const [postMessageError, setPostMessageError] = useState()\n  const [isLoadingPostMessage, setIsLoadingPostMessage] = useState(false)\n  const [id, setId] = useState()\n\n  const fetchMessages = () => {\n    return fetch(API_ENDPOINT)\n      .then((response) => response.json())\n      .then((data) => {\n        setMessages(data)\n      })\n      .catch((error) => {\n        setMessageApiError(error.message)\n      })\n  }\n\n  const handleDeleteData = () => {\n    console.log(messages)\n    // fetch(`https://student-json-api.lidemy.me/comments/${id}`, {\n    //   method: 'DELETE',\n    //   headers: {\n    //     'content-type': 'application/json',\n    //   },\n    // })\n    //   .then((res) => res.json())\n    //   .then((data) => console.log(id, data))\n  }\n\n  const handleTextareaFocus = (e) => {\n    setPostMessageError(null)\n  }\n\n  const handleTextareaChange = (e) => {\n    setValue(e.target.value)\n  }\n\n  const handleFormSubmit = (e) => {\n    e.preventDefault()\n    if (isLoadingPostMessage) return\n    setIsLoadingPostMessage(true)\n\n    fetch('https://student-json-api.lidemy.me/comments', {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n      },\n      body: JSON.stringify({\n        nickname: 'yongchen',\n        body: value,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        setIsLoadingPostMessage(false)\n        if (data.ok === 0) {\n          setPostMessageError(data.message)\n        } else {\n          setValue('')\n          fetchMessages()\n        }\n      })\n      .catch((error) => {\n        setIsLoadingPostMessage(false)\n        setPostMessageError(error.message)\n      })\n  }\n\n  useEffect(fetchMessages, [])\n\n  return (\n    <Page>\n      {isLoadingPostMessage && <Loading>Loading ...</Loading>}\n      <Title>留言板</Title>\n      <MessageForm onSubmit={handleFormSubmit}>\n        <MessageTextarea\n          value={value}\n          onFocus={handleTextareaFocus}\n          onChange={handleTextareaChange}\n          rows={10}\n        />\n        <SubmitButton>送出</SubmitButton>\n        {postMessageError && <ErrorMessage>{postMessageError}</ErrorMessage>}\n      </MessageForm>\n      {messageApiError && (\n        <ErrorMessage>\n          Something went wrong!\n          <br></br>\n          {messageApiError.toString()}\n        </ErrorMessage>\n      )}\n      {messages && messages.length === 0 && <div>No message</div>}\n      <MessageList>\n        <div>\n          {messages &&\n            messages.map((message) => (\n              <Message\n                key={message.id}\n                author={message.nickname}\n                time={new Date(message.createdAt).toLocaleString()}\n              >\n                {message.body}\n                <DeleteButton onClick={handleDeleteData}>刪除</DeleteButton>\n              </Message>\n            ))}\n        </div>\n      </MessageList>\n    </Page>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport { ThemeProvider } from 'styled-components';\n\nconst theme = {\n  colors: {\n    primary_300: '#ff7979',\n    primary_400: '#e33e3e',\n    primary_500: '#af0505',\n  },\n};\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    <App />\n  </ThemeProvider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}